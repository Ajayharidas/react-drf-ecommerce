version: '3.8'

services:
  db:
    image: postgres:13
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - ecomnetwork

  backend:
    build:
      context: ./backend
    container_name: backend
    ports:
      - 8000:8000
    expose:
      - 8000
    command: gunicorn --timeout 300 ecommerce.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - ./backend/.env
    depends_on:
      - db
    networks:
      - ecomnetwork

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    command: npm run dev
    expose:
      - 5173
    env_file:
      - ./frontend/ecommerce/.env
    depends_on:
      - backend
    networks:
      - ecomnetwork
  
  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./backend/staticfiles:/app/staticfiles
      - ./backend/media:/app/media
    depends_on:
      - db
      - backend
      - frontend
    networks:
      - ecomnetwork

networks:
  ecomnetwork:
    driver: bridge


volumes:
  postgres_data:
